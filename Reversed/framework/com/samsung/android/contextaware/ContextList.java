package com.samsung.android.contextaware;

import android.security.keystore.KeyProperties;
import com.samsung.android.bridge.multiwindow.MultiWindowManagerBridge;
import com.samsung.android.contextaware.manager.ContextAwareServiceErrors;
import com.samsung.android.contextaware.utilbundle.logger.CaLogger;

public class ContextList {
    private static volatile ContextList instance;

    public enum ContextType {
        NONE_CONTEXT(KeyProperties.DIGEST_NONE),
        AGGREGATOR_LOCATION("LOCATION"),
        AGGREGATOR_MOVING("MOVING"),
        AGGREGATOR_TEMPERATURE_HUMIDITY("TEMPERATURE_HUMIDITY"),
        AGGREGATOR_LIFE_LOG("LIFE_LOG"),
        AGGREGATOR_LPP("LPP"),
        AGGREGATOR_TEST_01("TEST_AGGREGATION_01"),
        AGGREGATOR_TEST_02("TEST_AGGREGATION_02"),
        AGGREGATOR_TEST_03("TEST_AGGREGATION_03"),
        ANDROID_RUNNER_RAW_GPS("RAW_GPS"),
        ANDROID_RUNNER_RAW_SATELLITE("RAW_SATELLITE"),
        ANDROID_RUNNER_RAW_WPS("RAW_WPS"),
        ANDROID_RUNNER_BEST_LOCATION("BEST_LOCATION"),
        ANDROID_RUNNER_ACCELEROMETER_SENSOR("ACCELEROMETER_SENSOR"),
        ANDROID_RUNNER_ORIENTATION_SENSOR("ORIENTATION_SENSOR"),
        ANDROID_RUNNER_MAGNETIC_SENSOR("MAGNETIC_SENSOR"),
        ANDROID_RUNNER_GYROSCOPE_SENSOR("GYROSCOPE_SENSOR"),
        SENSORHUB_RUNNER_APDR("APDR"),
        SENSORHUB_RUNNER_PEDOMETER("PEDOMETER"),
        SENSORHUB_RUNNER_GESTURE_APPROACH("GESTURE_APPROACH"),
        SENSORHUB_RUNNER_STEP_COUNT_ALERT("STEP_COUNT_ALERT"),
        SENSORHUB_RUNNER_MOTION("MOTION"),
        SENSORHUB_RUNNER_MOVEMENT("MOVEMENT"),
        SENSORHUB_RUNNER_AUTO_ROTATION("AUTO_ROTATION"),
        SENSORHUB_RUNNER_POWER_NOTI("POWER_NOTI"),
        SENSORHUB_RUNNER_MOVEMENT_FOR_POSITIONING("MOVEMENT_FOR_POSITIONING"),
        SENSORHUB_RUNNER_DIRECT_CALL("DIRECT_CALL"),
        SENSORHUB_RUNNER_STOP_ALERT("STOP_ALERT"),
        SENSORHUB_RUNNER_RAW_TEMPERATURE_HUMIDITY_SENSOR("RAW_TEMPERATURE_HUMIDITY_SENSOR"),
        SENSORHUB_RUNNER_RAW_BAROMETER_SENSOR("RAW_BAROMETER_SENSOR"),
        SENSORHUB_RUNNER_CALL_POSE("CALL_POSE"),
        SENSORHUB_RUNNER_SHAKE_MOTION("SHAKE_MOTION"),
        SENSORHUB_RUNNER_CARE_GIVER("CARE_GIVER"),
        SENSORHUB_RUNNER_ABNORMAL_SHOCK("ABNORMAL_SHOCK"),
        SENSORHUB_RUNNER_FLIP_COVER_ACTION("FLIP_COVER_ACTION"),
        SENSORHUB_RUNNER_GYRO_TEMPERATURE("GYRO_TEMPERATURE"),
        SENSORHUB_RUNNER_PUT_DOWN_MOTION("PUT_DOWN_MOTION"),
        SENSORHUB_RUNNER_WAKE_UP_VOICE("WAKE_UP_VOICE"),
        SENSORHUB_RUNNER_BOUNCE_SHORT_MOTION("BOUNCE_SHORT_MOTION"),
        SENSORHUB_RUNNER_BOUNCE_LONG_MOTION("BOUNCE_LONG_MOTION"),
        SENSORHUB_RUNNER_WRIST_UP_MOTION("WRIST_UP_MOTION"),
        SENSORHUB_RUNNER_FLAT_MOTION("FLAT_MOTION"),
        SENSORHUB_RUNNER_MOVEMENT_ALERT("MOVEMENT_ALERT"),
        SENSORHUB_RUNNER_TEST_FLAT_MOTION("TEST_FLAT_MOTION"),
        SENSORHUB_RUNNER_TEMPERATURE_ALERT("TEMPERATURE_ALERT"),
        SENSORHUB_RUNNER_STAYING_ALERT("STAYING_ALERT"),
        SENSORHUB_RUNNER_LIFE_LOG_COMPONENT("LIFE_LOG_COMPONENT"),
        SENSORHUB_RUNNER_ACTIVITY_TRACKER("ACTIVITY_TRACKER"),
        SENSORHUB_RUNNER_ACTIVITY_TRACKER_INTERRUPT("ACTIVITY_TRACKER_INTERRUPT"),
        SENSORHUB_RUNNER_ACTIVITY_TRACKER_BATCH("ACTIVITY_TRACKER_BATCH"),
        SENSORHUB_RUNNER_ACTIVITY_TRACKER_EXTANDED_INTERRUPT("ACTIVITY_TRACKER_EXTANDED_INTERRUPT"),
        SENSORHUB_RUNNER_SPECIFIC_POSE_ALERT("SPECIFIC_POSE_ALERT"),
        SENSORHUB_RUNNER_SLEEP_MONITOR("SLEEP_MONITOR"),
        SENSORHUB_RUNNER_CAPTURE_MOTION("CAPTURE_MOTION"),
        SENSORHUB_RUNNER_CALL_MOTION("CALL_MOTION"),
        SENSORHUB_RUNNER_SL_MONITOR("STEP_LEVEL_MONITOR"),
        SENSORHUB_RUNNER_SL_MONITOR_EXTENDED_INTERRUPT("STEP_LEVEL_MONITOR_EXTENDED_INTERRUPT"),
        SENSORHUB_RUNNER_ACTIVE_TIME("ACTIVE_TIME"),
        SENSORHUB_RUNNER_FLAT_MOTION_FOR_TABLE_MODE("FLAT_MOTION_FOR_TABLE_MODE"),
        SENSORHUB_RUNNER_CARRYING_STATUS_MONITOR("CARRYING_STATUS_MONITOR"),
        SENSORHUB_RUNNER_BOTTOM_FLAT_DETECTOR("BOTTOM_FLAT_DETECTOR"),
        SENSORHUB_RUNNER_EXERCISE("EXERCISE"),
        SENSORHUB_RUNNER_PHONE_STATE_MONITOR("PHONE_STATE_MONITOR"),
        SENSORHUB_RUNNER_AUTO_BRIGHTNESS("AUTO_BRIGHTNESS"),
        SENSORHUB_RUNNER_ABNORMAL_PRESSURE_MONITOR("ABNORMAL_PRESSURE_MONITOR"),
        SENSORHUB_RUNNER_HALL_SENSOR("HALL_SENSOR"),
        SENSORHUB_RUNNER_EAD("EAD"),
        SENSORHUB_RUNNER_DUAL_DISPLAY_ANGLE("DUAL_DISPLAY_ANGLE"),
        SENSORHUB_RUNNER_WIRELESS_CHARGING_MONITOR("WIRELESS_CHARGING_MONITOR"),
        SENSORHUB_RUNNER_SLOCATION("SLOCATION_RUNNER"),
        SENSORHUB_RUNNER_DEVICE_PHYSICAL_CONTEXT_MONITOR("DEVICE_PHYSICAL_CONTEXT_MONITOR"),
        SENSORHUB_RUNNER_MAIN_SCREEN_DETECTION("MAIN_SCREEN_DETECTION_RUNNER"),
        SENSORHUB_RUNNER_ANY_MOTION_DETECTOR_RUNNER("ANY_MOTION_DETECTOR_RUNNER"),
        SENSORHUB_RUNNER_CH_LOC_TRIGGER("CH_LOC_TRIGGER"),
        SENSORHUB_RUNNER_FREE_FALL_DETECTION("FREE_FALL_DETECTION"),
        SENSORHUB_RUNNER_SENSOR_STATUS_CHECK("SENSOR_STATUS_CHECK_RUNNER"),
        SENSORHUB_RUNNER_ACTIVITY_CALIBRATION("ACTIVITY_CALIBRATION"),
        REQUEST_SENSORHUB_MOVEMENT_FOR_POSITIONING_CURRENT_STATUS("CURRENT_STATUS_FOR_MOVEMENT_POSITIONING"),
        REQUEST_SENSORHUB_PEDOMETER_CURRENT_INFO("PEDOMETER_CURRENT_INFO"),
        REQUEST_SENSORHUB_ACTIVITY_TRACKER_CURRENT_INFO("ACTIVITY_TRACKER_CURRENT_INFO"),
        REQUEST_SENSORHUB_ACTIVITY_TRACKER_BATCH_CURRENT_INFO("ACTIVITY_TRACKER_BATCH_CURRENT_INFO"),
        REQUEST_SENSORHUB_SLEEP_MONITOR_CURRENT_INFO("SLEEP_MONITOR_CURRENT_INFO"),
        SENSORHUB_PARSER_NONLIB_ORIENTATION("ORIENTATION_PARSER"),
        SENSORHUB_PARSER_NOTI_POWER_RESET("POWER_PARSER_RESET"),
        SENSORHUB_PARSER_SENSORHUB_DEBUG_MSG("SENSORHUB_DEBUG_MSG"),
        CMD_PROCESS_FAULT_DETECTION("CMD_PROCESS_FAULT_DETECTION");
        
        private String code;

        private ContextType(String str) {
            this.code = str;
        }

        public String getCode() {
            return this.code;
        }
    }

    public static ContextList getInstance() {
        if (instance == null) {
            synchronized (ContextList.class) {
                if (instance == null) {
                    instance = new ContextList();
                }
            }
        }
        return instance;
    }

    public final String getServiceCode(int i) {
        String str = MultiWindowManagerBridge.SNAP_WINDOW_VISBLE_CALLER_UNSET;
        for (Enum enumR : ContextType.values()) {
            if (enumR.ordinal() == i) {
                str = enumR.getCode();
                break;
            }
        }
        if (str.isEmpty()) {
            CaLogger.error(ContextAwareServiceErrors.getMessage(ContextAwareServiceErrors.ERROR_SERVICE_CODE_NULL_EXCEPTION.getCode()));
        }
        return str;
    }

    public final int getServiceOrdinal(String str) {
        for (Enum enumR : ContextType.values()) {
            if (enumR.getCode().equals(str)) {
                return enumR.ordinal();
            }
        }
        return 0;
    }
}
