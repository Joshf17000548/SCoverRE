package com.samsung.android.app.ledcover.fota;

public class Constants {
    public static final byte AUTH_FW_MODE = (byte) 85;
    public static final int AUTH_ONELINE_DATA_SIZE = 240;
    public static final byte[] AUTH_VERSION_CHECK_COMMAND;
    public static final int CONNECTION_DEFAULT_TIME_OUT = 30000;
    public static final int DOWNLOAD_BUFFER_SIZE = 4096;
    public static final byte[] ERROR_CODE;
    public static final int ERROR_FILE_VERIFY = 106;
    public static final int ERROR_GENERAL = 201;
    public static final int ERROR_INTERRUPT_EXCEPTION = 105;
    public static final int ERROR_IOEXCEPTION = 102;
    public static final int ERROR_TIME_OUT = 103;
    public static final int ERROR_XMLPULLPARSER = 101;
    public static final byte ETC_ERROR = (byte) 106;
    public static final byte FAILED = (byte) 3;
    public static final byte FIELD_ON_DETECTED_ERROR = (byte) 31;
    public static final byte FIELD_ON_ERROR = (byte) -32;
    public static final int FLASH_ERASING_TIME_VALUE = 15;
    public static final byte FOTA_FW_MODE = (byte) 90;
    public static final int HTTP_ERROR_BAD_REQUEST = 400;
    public static final int INVALID_URL = 104;
    public static final int MCU_ONELINE_DATA_SIZE = 64;
    public static final String MCU_ONELINE_PASSCODE = "0800";
    public static final byte[] MCU_VERSION_CHECK_COMMAND;
    public static final byte[] MESSAGE_CHANGE_BOOT_AUTH_MODE;
    public static final byte[] MESSAGE_CHANGE_BOOT_FW_MODE;
    public static final byte[] MESSAGE_CHECKSUM_VALID;
    public static final byte[] MESSAGE_MCU_CHECKSUM_CMD;
    public static final byte[] MESSAGE_MCU_CHECKSUM_READ_CMD;
    public static final byte[] MESSAGE_MCU_DOWNLOAD_EXIT;
    public static final byte[] MESSAGE_MCU_DOWNLOAD_HEADER;
    public static final byte[] MESSAGE_MCU_DOWNLOAD_MODE;
    public static final byte[] MESSAGE_MCU_ERASE_CMD;
    public static final int MSG_DOWNLOAD_PROGRESS = 5;
    public static final int MSG_FIRMWARE_DOWNLOAD = 3;
    public static final int MSG_GET_FIRMWARE_INFO = 1;
    public static final int MSG_GET_HASH_INFO = 2;
    public static final int MSG_GET_RESPONSE = 0;
    public static final int MSG_HASH_DOWNLOAD = 4;
    public static final byte MUC_DOWNLOAD_RES = (byte) 33;
    public static final byte MUC_DOWNLOAD_RES_2 = (byte) 34;
    public static final byte REJECTED = (byte) 1;
    public static final byte RESET_ERROR_CODE = (byte) 105;
    public static final int RESULT_FAIL = 101;
    public static final int RESULT_SUCCESS = 100;
    public static final byte RF_PROTOCOL_ERROR = (byte) -79;
    public static final byte RF_TRANSMISSION_ERROR = (byte) -80;
    public static final String STR_DEFAULT_URL = "https://www.samsungimaging.com/common/support/firmware/downloadUrlList.do?";
    public static final String STR_KEY_INFO_XML_DESC = "Description";
    public static final String STR_KEY_INFO_XML_DESC_KR = "DescriptionKor";
    public static final String STR_KEY_INFO_XML_DOWN_URL = "DownloadURL";
    public static final String STR_KEY_INFO_XML_FW_VERSION = "FWVersion";
    public static final String STR_URL_PARAM_LOC = "loc=";
    public static final String STR_URL_PARAM_PRD_NAME = "prd_mdl_name=";
    public static final String STR_URL_TYPE_FIRMWARE = "FW";
    public static final String STR_URL_TYPE_HASH = "HASH";
    public static final byte SUCCESS = (byte) -112;
    public static final byte SUCCESS_FW_MODE = (byte) 0;
    public static final String TAG_INFO_XML_START = "FirmwareInfo";
    public static final int URL_TYPE_FIRMWARE = 1;
    public static final int URL_TYPE_HASH = 2;

    static {
        MESSAGE_MCU_DOWNLOAD_MODE = new byte[]{SUCCESS_FW_MODE, (byte) -92, SUCCESS_FW_MODE, REJECTED, (byte) 4, (byte) 64, (byte) -84, (byte) 91, REJECTED};
        MESSAGE_MCU_ERASE_CMD = new byte[]{SUCCESS_FW_MODE, (byte) -93, SUCCESS_FW_MODE, (byte) 2, FAILED, (byte) 64, (byte) -84, (byte) 45};
        MESSAGE_MCU_CHECKSUM_CMD = new byte[]{SUCCESS_FW_MODE, (byte) -93, SUCCESS_FW_MODE, (byte) 2, (byte) 7, (byte) 64, (byte) -84, (byte) -98, (byte) 8, SUCCESS_FW_MODE, Byte.MAX_VALUE, (byte) -1};
        MESSAGE_MCU_CHECKSUM_READ_CMD = new byte[]{SUCCESS_FW_MODE, (byte) -92, SUCCESS_FW_MODE, (byte) 2, FAILED, (byte) 64, SUCCESS_FW_MODE, (byte) 6};
        MESSAGE_MCU_DOWNLOAD_EXIT = new byte[]{SUCCESS_FW_MODE, (byte) -93, SUCCESS_FW_MODE, (byte) 2, FAILED, (byte) 64, (byte) -84, (byte) -31};
        MESSAGE_MCU_DOWNLOAD_HEADER = new byte[]{SUCCESS_FW_MODE, (byte) -93, SUCCESS_FW_MODE, (byte) 2, (byte) 69, (byte) 64, (byte) -84, (byte) 122};
        MESSAGE_CHANGE_BOOT_FW_MODE = new byte[]{SUCCESS_FW_MODE, (byte) 64, SUCCESS_FW_MODE, (byte) 32, SUCCESS_FW_MODE};
        MESSAGE_CHANGE_BOOT_AUTH_MODE = new byte[]{SUCCESS_FW_MODE, (byte) 64, SUCCESS_FW_MODE, (byte) 47, SUCCESS_FW_MODE};
        MESSAGE_CHECKSUM_VALID = new byte[]{SUCCESS_FW_MODE, (byte) 38, SUCCESS_FW_MODE, SUCCESS_FW_MODE, (byte) 4, (byte) 32, SUCCESS_FW_MODE, (byte) -102, SUCCESS_FW_MODE};
        MCU_VERSION_CHECK_COMMAND = new byte[]{SUCCESS_FW_MODE, (byte) -95, SUCCESS_FW_MODE, SUCCESS_FW_MODE, (byte) 5, (byte) 5, (byte) 113, SUCCESS_FW_MODE, SUCCESS_FW_MODE, SUCCESS_FW_MODE};
        AUTH_VERSION_CHECK_COMMAND = new byte[]{SUCCESS_FW_MODE, (byte) -94, SUCCESS_FW_MODE, SUCCESS_FW_MODE, (byte) 7, (byte) 7, (byte) 113, SUCCESS_FW_MODE, SUCCESS_FW_MODE, SUCCESS_FW_MODE, (byte) -1, (byte) -1};
        ERROR_CODE = new byte[]{REJECTED, FAILED, RF_TRANSMISSION_ERROR, RF_PROTOCOL_ERROR, (byte) -78, FIELD_ON_ERROR, FIELD_ON_DETECTED_ERROR, ETC_ERROR};
    }
}
