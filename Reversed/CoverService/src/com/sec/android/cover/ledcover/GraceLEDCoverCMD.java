package com.sec.android.cover.ledcover;

import java.lang.reflect.Array;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;

public class GraceLEDCoverCMD {
    public static final int Preset_ID_Amazed = 28;
    public static final int Preset_ID_Bear = 13;
    public static final int Preset_ID_Bird = 10;
    public static final int Preset_ID_Boy = 3;
    public static final int Preset_ID_Butterfly = 9;
    public static final int Preset_ID_Car = 8;
    public static final int Preset_ID_Chicken = 38;
    public static final int Preset_ID_Coffee = 19;
    public static final int Preset_ID_DNA = 34;
    public static final int Preset_ID_Decalcomanie = 29;
    public static final int Preset_ID_Default = 0;
    public static final int Preset_ID_Elephant = 12;
    public static final int Preset_ID_End = 40;
    public static final int Preset_ID_Family = 24;
    public static final int Preset_ID_Father = 1;
    public static final int Preset_ID_Firework = 36;
    public static final int Preset_ID_Friends = 25;
    public static final int Preset_ID_Gift = 20;
    public static final int Preset_ID_Girl = 4;
    public static final int Preset_ID_Grinding = 31;
    public static final int Preset_ID_Heart = 18;
    public static final int Preset_ID_Horse = 15;
    public static final int Preset_ID_House = 7;
    public static final int Preset_ID_Infinity = 37;
    public static final int Preset_ID_Jaws = 30;
    public static final int Preset_ID_Mood_Bad = 23;
    public static final int Preset_ID_Mood_Neutral = 22;
    public static final int Preset_ID_Mother = 2;
    public static final int Preset_ID_Rabbit = 14;
    public static final int Preset_ID_Sea = 33;
    public static final int Preset_ID_Skyscraper = 6;
    public static final int Preset_ID_Smile = 5;
    public static final int Preset_ID_Snow = 35;
    public static final int Preset_ID_Squeeze = 26;
    public static final int Preset_ID_Surprised = 21;
    public static final int Preset_ID_Tree = 17;
    public static final int Preset_ID_Tulip = 16;
    public static final int Preset_ID_Turtle = 39;
    public static final int Preset_ID_Twinkle = 32;
    public static final int Preset_ID_Wave = 27;
    public static final int Preset_ID_Whale = 11;
    public static final String cmdDate = "20160729";
    public static final int cmdVersion = 18;
    private final int[] Header_register_array = new int[]{0, 2, 3, 4, 4, 4, 5, 6, 6, 6, 9, 9, 10, 10, 10, 8};
    public final int LED_COLUMN = 17;
    public final int LED_ROW = 9;
    private final int MISSED_CALL = 1;
    private final int MISSED_MSG = 0;
    private final String[] amazedNotiFrame = new String[]{"002882284500452882284500452882280050140000002844AA10AA442844AA10AA4428000000000000000010387C38100010387C38100000000000000000000010381000000010381000000000000000000000001038100000001038100000000000000000000010387C38100010387C381000000000000000002844AA10AA442844AA10AA442800000000000028822845004528822845004528822800501400"};
    private final String batteryPercentage = "9040209";
    private final String[] batteryframe = new String[]{"000000000000FE030303FE000000000000C00700", "000000000000FE838383FE000000000000C00700", "000000000000FEC3C3C3FE000000000000C00700", "000000000000FEE3E3E3FE000000000000C00700", "000000000000FEF3F3F3FE000000000000C00700", "000000000000FEFBFBFBFE000000000000C00700", "000000000000FEFFFFFFFE000000000000C00700"};
    private final String[] bearNotiFrame = new String[]{};
    private final String[] birdNotiFrame = new String[]{};
    private final String[] boyNotiFrame = new String[]{"0000000808087E8F0F0F8F7E00000000000003000000000808087E8F0F0F8F7E00040000000003000000000808087E8F0F0F8F7E00040400000003000000000808087E8F0F0F8F7E00040404000003000000000808087E8F0F0F8F7E80000404000003000000000808087E8F0F0F8F7E80800004000003000000000808087E8F0F0F8F7E80808000000003000000000808087E8F0F0F8F7E00808000000003000000000808087E8F0F0F8F7E00008000000003000000000808087E8F0F0F8F7E0000000000000300", "0000000808087E8F0F0F8F7E0000000000000300"};
    private final String[] butterflyNotiFrame = new String[]{};
    private final String[] carNotiFrame = new String[]{"00000070F07CF2737F73F27CF07000000020080000000070F07CF2737F73F27CF07000000020080000000070F07CF2737F73F27CF070400000200800000070F07CF2737F73F27CF07000400000100400000070F07CF2737F73F27CF0700000400010040000000070F07CF2737F73F27CF07000002020080000000070F07CF2737F73F27CF0700000202008000000000070F07CF2737F73F27CF07000004010000000000070F07CF2737F73F27CF07000004010000000000070F07CF2737F73F27CF0700000401000", "0000000070F07CF2737F73F27CF07000004010000000000070F07CF2737F73F27CF0700000401000"};
    private final String[] chickenNotiFrame = new String[]{"00000008087E83638C1010D0780000000080070000000008087E83638C1010D0780000000080070000000008087E83638C1010D078000000008007000000000008689E63831C10D078000000008007000000000008689E63831C10D07800000000800700000008081E638324485050D07800000000800700000008081E638324485050D07800000000800700000008081E638324485050D07800000000800700000008081E638324485050D07800000000800700"};
    private final String clockColon = "28";
    private final String[] coffeeNotiFrame = new String[]{};
    private final String[] decalcomanieNotiFrame = new String[]{};
    private final String defaultFrameByte = "0000000000000000000000000000000000000000";
    private final String[] dnaNotiFrame = new String[]{"4410448282441044828244104482824410000000401044828244104482824410448282441000000040100402824410448282441044828244100000004010040202041044828244104482824410000000401004020204104080824410448282441000000000100402020410408080401044828244100000000000000202041040808040100482824410000000000000000000104080804010040202041000000000000000000000008080401004020204100000000410000000000000000040100402020410000000", "0410408080000000000000000002020410000000041040808040100000000000000000041000000004104080804010040200000000000000000000004410408080401004020204000000000000000000441044828040100402020410408000000000000044104482824410040202041040808040000000004410448282441044020204104080804010000000441044828244104482824410408080401000000044104482824410448282441044808040100000004410448282441044828244104482824010000000", "4410448282441044828244104482824410000000"};
    private final String[] elephantNotiFrame = new String[]{};
    private final String[] familyNotiFrame = new String[]{"0000002040AC9292ACD8A4A4D8400000000000000000002040AC9292ACD8A4A4D8400000000000000000001020D6898996D8A4A4D8400000000000000000001020D6898996D8A4A4D8400000000000000000001020D6898996EC9292EC100000000000000000001020D6898996EC9292EC100000000000000000002040AC9292ACEC9292EC100000000000000000002040AC9292ACEC9292EC100000000000000000002040AC9292ACD8A4A4D8200000000000000000002040AC9292ACD8A4A4D820000000000000"};
    private final String[] fatherNotiFrame = new String[]{};
    private final String[] fireworkNotiFrame = new String[]{};
    private final String[] friendsNotiFrame = new String[]{"00000000C0AC9292ACD292ACC00000000000000000000000C0AC9292ACD292ACC0000000000000000000000080C0AC9292ACD292EC000000000000000000000080C0AC9292ACD292EC000000000000000000000080C0AC9292ACD292EC000000000000000000000080C0AC9292ACD292EC0000000000000000000000C0AC9292ACD292ACC00000000000000000000000C0AC9292ACD292ACC00000000000000000000000EC9292ACD292ACC0800000000000000000000000EC9292ACD292ACC08000000000000000", "00000000EC9292ACD292ACC0800000000000000000000000EC9292ACD292ACC0800000000000000000000000C0AC9292ACD292ACC00000000000000000000000C0AC9292ACD292ACC00000000000000000000000C0AC9292ACD292ACC00000000000000000000000C0AC9292ACD292ACC00000000000000000000000C0AC9292ACD292ACC00000000000000000000000C0AC9292ACD292ACC00000000000000000000000C0AC9292ACD292ACC000000000000000"};
    private final String[] giftNotiFrame = new String[]{};
    private final String[] girlNotiFrame = new String[]{};
    private final String[] grindingNotiFrame = new String[]{"29924492299244922992449229924492291111012992449229924492299244922992449229111101AA518214AA518214AA518214AA518214AA888800AA518214AA518214AA518214AA518214AA8888002855825528558255285582552855825528AAAA002855825528558255285582552855825528AAAA002855825528558255285582552855825528AAAA002855825528558255285582552855825528AAAA00AA148251AA148251AA148251AA148251AA222200AA148251AA148251AA148251AA148251AA222200"};
    private final String header3rdNotification = "1F15250180010200001100";
    private final String headerBatteryAlert = "330B250280040200001400";
    private final String headerBatteryCharging1st = "D30C310A80010200051147";
    private final String headerBatteryCharging2nd = "1F0C3101801402000011E7";
    private final String headerClock = "1F0F250197170200001127";
    private final String headerCueEnable = "3316FF028014E20000F140";
    private final String headerDuringCall = "5B032504800A0200001100";
    private final String headerEndCall = "3304250280060200001300";
    private final String headerMissed1stScene = "1F09330197020200071147";
    private final String headerMissed2ndScene = "1F093301800202000711E7";
    private final String headerMissedSingleScene = "1F09250197170200001127";
    private final String headerNewMessage = "D305250A800102001B1100";
    private final String headerNumberIncomingCall = "3316FF0A800302000AF1C0";
    private final String headerPresetCallerId = "3302FF02800A820000FF00";
    private final String headerUserIconHold = "1F16FF01800E020000F140";
    private final String headerUserIconNotification = "BF152509800102001A1100";
    private final String headerVideoCall = "1F14FF0180FF020000FF00";
    private final String headerVoiceRecoder = "D30F3C0A80010200001600";
    private final String[] heartNotiFrame = new String[]{"000000001C224282048242221C00000000000100000000001C224282048242221C00000000000100000000001C224282048242221C00000000000100000000001C224282048242221C000000000001000000000018244284088442241800000000000100000000000018244890482418000000000000000000000000001824489048241800000000000000000000000018244284088442241800000000000100000000001C224282048242221C00000000000100000000001C224282048242221C00000000000100", "000000001C224282048242221C00000000000100000000001C224282048242221C00000000000100000000001C224282048242221C00000000000100000000001C224282048242221C00000000000100"};
    private final String[] horseNotiFrame = new String[]{"0000000C0A857A44484848B804040000001010000000000C0A857A44484848B804040000001010000000000C0A857A44484848B884040000002000000000000C0A857A44484848B88404000000200000000018140A14E4484848C8B80402000000800000000018140A14E4484848C8B8040200000080000000000C0A252A32242424245C420100000000000000000C0A252A32242424245C420100000000000000000C8A457A44484848B804040000000000020000000C8A457A44484848B8040400000000000200"};
    private final String[] houseNotiFrame = new String[]{};
    private final String[] infinityNotiFrame = new String[]{};
    private final String[] jawsNotiFrame = new String[]{"45224588452245884522458845224588455555014522458845224588452245884522458845555501AA54A85028142A54AA54A85028142A54AA000000AA54A85028142A54AA54A85028142A54AA0000001428502814285028142850281428502814000000142850281428502814285028142850281400000014285028142850281428502814285028140000001428502814285028142850281428502814000000AA54A85028142A54AA54A85028142A54AA000000AA54A85028142A54AA54A85028142A54AA000000"};
    private final String[] largeNum = new String[]{"FE82FE", "04FE00", "F2929E", "9292FE", "1E10FE", "9E92F2", "FE92F2", "0E02FE", "FE92FE", "9E92FE"};
    private final int miniColonPos = 16;
    private final int miniHourFirstPos = 0;
    private final int miniHourSecondPos = 8;
    private final String miniMinus = "1010";
    private final int miniMinuteFirstPos = 20;
    private final int miniMinuteSecondPos = 28;
    private final String[] miniNumForMsgCall = new String[]{"7C447C", "007C00", "74545C", "54547C", "1C107C", "5C5474", "7C5474", "0C047C", "7C547C", "5C547C"};
    private final int miniNumLen = 6;
    private final String miniPlus = "103810";
    private final String[] minuNumPhonNumber = new String[]{"7C447C", "7C", "74545C", "54547C", "1C107C", "5C5474", "7C5474", "0C047C", "7C547C", "5C547C"};
    private final String missedCall99plusFrame = "00CEE66A7068E4C0005C547C005C547C00000000CEE66A7068E4C0005C547C005C547C0010000000E66A7068E4C0005C547C005C547C0010380000006A7068E4C0005C547C005C547C00103810000000";
    private final String missedCallIcon = "CEE66A7068E4C0";
    private final String missedMessageIcon = "3E22E24222223E";
    private final String missedMsg99plusFrame = "003E22E24222223E005C547C005C547C000000003E22E24222223E005C547C005C547C001000000022E24222223E005C547C005C547C001038000000E24222223E005C547C005C547C00103810000000";
    private final String[] mood_BadNotiFrame = new String[]{};
    private final String[] mood_NeutralNotiFrame = new String[]{};
    private final String[] motherNotiFrame = new String[]{};
    private final String newMessageFrameByte = "00000000003E22E24222223E0000000000000000";
    private final int[] notification_repeat_array = new int[]{0, 3, 3, 4, 2, 3, 2, 2, 3, 3, 3, 3, 2, 2, 2, 4, 2, 1, 3, 2, 2, 3, 1, 2, 4, 2, 5, 3, 5, 2, 4, 4, 7, 4, 2, 2, 2, 1, 4, 2, 40};
    private final String[] presetIdAcceptFrame = new String[]{"000000000000007CFEC600000000000000000000", "00000008087E894949897E080800000000800100", "000000C03C7289090789723CC000000000B00D00", "0000000808087E8F0F0F8F7E0000000000000300", "000000807C7289090589727C8000000000800100", "000000007C822149414921827C00000000C00700", "00000000F808AFA1A5A501FF0000000000100800", "0000000010F81CDE5FDE1CF81000000000E00F00", "00000070F07CF2737F73F27CF070000000200800", "000000000FD12284788422D10F00000000C00600", "00000004041E2141C64848281C00000000000100", "00000000C221111E1111224040E0000000F03F00", "000000F824EA42E65A42C244F800000000A81400", "0000000679851242421285790600000000C00300", "00000000007E812E88882E817E00000000800700", "0000000C0A857A44484848B80404000000101000", "0000000000408F1EFF1E8F400000000000800300", "000000000020343EFF3E34200000000000000100", "000000001C224282048242221C00000000000100", "000000007A8D080A0D8878503000000000C00100", "000000001CF45556FC5655F41C00000000E00F00", "000000007C820D6151610D827C00000000C00700", "000000007C820941414109827C00000000C00700", "000000007C820949414909827C00000000C00700", "0000002040AC9292ACD8A4A4D840000000000000", "00000000C0AC9292ACD292ACC000000000000000", "11AA44AA11AA44AA11AA44AA11AA44AA11111101", "9249499224249249499224249249499224300C01", "0028822845004528822845004528822800501400", "2810446C3892C66C386CC692386C441028000000", "4522458845224588452245884522458845555501", "2992449229924492299244922992449229111101", "0000000010005400550054001000000000000100", "A44A0A54A1A44A0A54A1A44A0A54A1A44A841000", "4410448282441044828244104482824410000000", "2211448822114488221144882211448822222200", "AA77AADDAA77AADDAA77AADDAA77AADDAAAAAA00", "0000002840004028020001000100822800001000", "00000008087E83638C1010D07800000000800700", "0000103878C0F894AA96AA94F880000000200800"};
    private final String[] presetIdRejectFrame = new String[]{"000000000000007CFEC600000000281028000000", "00000008087E894949897E080800281028800100", "000000C03C7289090789723CC000281028B00D00", "0000000808087E8F0F0F8F7E0000281028000300", "000000807C7289090589727C8000281028800100", "000000007C822149414921827C00281028C00700", "00000000F808AFA1A5A501FF0000281028100800", "0000000010F81CDE5FDE1CF81000281028E00F00", "00000070F07CF2737F73F27CF070281028200800", "000000000FD12284788422D10F00281028C00600", "00000004041E2141C64848281C00281028000100", "00000000C221111E1111224040E0281028F03F00", "000000F824EA42E65A42C244F800281028A81400", "0000000679851242421285790600281028C00300", "00000000007E812E88882E817E00281028800700", "0000000C0A857A44484848B80404281028101000", "0000000000408F1EFF1E8F400000281028800300", "000000000020343EFF3E34200000281028000100", "000000001C224282048242221C00281028000100", "000000007A8D080A0D8878503000281028C00100", "000000001CF45556FC5655F41C00281028E00F00", "000000007C820D6151610D827C00281028C00700", "000000007C820941414109827C00281028C00700", "000000007C820949414909827C00281028C00700", "0000002040AC9292ACD8A4A4D840281028000000", "00000000C0AC9292ACD292ACC000281028000000", "11AA44AA11AA44AA11AA44AA11AA44AA11111101", "9249499224249249499224249249499224300C01", "0028822845004528822845004528822800501400", "2810446C3892C66C386CC692386C441028000000", "4522458845224588452245884522458845555501", "2992449229924492299244922992449229111101", "0000000010005400550054001000281028000100", "A44A0A54A1A44A0A54A1A44A0A54A1A44A841000", "4410448282441044828244104482824410000000", "2211448822114488221144882211448822222200", "AA77AADDAA77AADDAA77AADDAA77AADDAAAAAA00", "0000002840004028020001000100822800001000", "00000008087E83638C1010D07800281028800700", "0000103878C0F894AA96AA94F880281028200800"};
    protected final String[] preset_id_str = new String[]{"Preset_ID_Default", "Preset_ID_Father", "Preset_ID_Mother", "Preset_ID_Boy", "Preset_ID_Girl", "Preset_ID_Smile", "Preset_ID_Skyscraper", "Preset_ID_House", "Preset_ID_Car", "Preset_ID_Butterfly", "Preset_ID_Bird", "Preset_ID_Whale", "Preset_ID_Elephant", "Preset_ID_Bear", "Preset_ID_Rabbit", "Preset_ID_Horse", "Preset_ID_Tulip", "Preset_ID_Tree", "Preset_ID_Heart", "Preset_ID_Coffee", "Preset_ID_Gift", "Preset_ID_Surprised", "Preset_ID_Mood_Neutral", "Preset_ID_Mood_Bad", "Preset_ID_Family", "Preset_ID_Friends", "Preset_ID_Squeeze", "Preset_ID_Wave", "Preset_ID_Amazed", "Preset_ID_Decalcomanie", "Preset_ID_Jaws", "Preset_ID_Grinding", "Preset_ID_Twinkle", "Preset_ID_Sea", "Preset_ID_DNA", "Preset_ID_Snow", "Preset_ID_Firework", "Preset_ID_Infinity", "Preset_ID_Chicken", "Preset_ID_Turtle", "Preset_ID_End"};
    private final String[] rabbitNotiFrame = new String[]{};
    private final String[] seaNotiFrame = new String[]{"A44A0A54A1A44A0A54A1A44A0A54A1A44A841000A44A0A54A1A44A0A54A1A44A0A54A1A44A8410004A0A54A1A44A0A54A1A44A0A54A1A44A0A4208014A0A54A1A44A0A54A1A44A0A54A1A44A0A4208010A54A1A44A0A54A1A44A0A54A1A44A0A542184000A54A1A44A0A54A1A44A0A54A1A44A0A5421840054A1A44A0A54A1A44A0A54A1A44A0A54A110420054A1A44A0A54A1A44A0A54A1A44A0A54A1104200A1A44A0A54A1A44A0A54A1A44A0A54A1A4082100A1A44A0A54A1A44A0A54A1A44A0A54A1A4082100"};
    private final String[] skyscraperNotiFrame = new String[]{};
    private final String[] smileNotiFrame = new String[]{};
    private final String[] snowNotiFrame = new String[]{};
    private final String[] squeezeNotiFrame = new String[]{"11AA44AA11AA44AA11AA44AA11AA44AA1111110111AA44AA11AA44AA11AA44AA11AA44AA11111101825428548254285482542854825428548200000082542854825428548254285482542854820000005428102854281028542810285428102854000000542810285428102854281028542810285400000082542854825428548254285482542854820000008254285482542854825428548254285482000000"};
    private final String[] surprisedNotiFrame = new String[]{"000000007C821181818111827C00000000C00700000000007C821181818111827C00000000C00700000000007C820941614109827C00000000C00700000000007C820941614109827C00000000C00700000000007C820D6151610D827C00000000C00700000000007C820D6151610D827C00000000C00700000000007C820D6151610D827C00000000C00700000000007C820D6151610D827C00000000C00700000000007C820D6151610D827C00000000C00700000000007C820D6151610D827C00000000C00700", "000000007C820D6151610D827C00000000C00700000000007C820D6151610D827C00000000C00700000000007C820D6151610D827C00000000C00700000000007C820D6151610D827C00000000C00700000000007C820D6151610D827C00000000C00700"};
    private final String[] treeNotiFrame = new String[]{};
    private final String[] tulipNotiFrame = new String[]{};
    private final String[] turtleNotiFrame = new String[]{};
    private final String[] twinkleNotiFrame = new String[]{"000000001000540055005400100000000000010000000000100054005500540010000000000001000000000000821028542810820000000000000000000000000082102854281082000000000000000000000000110044001100440011000000001011000000000011004400110044001100000000101100"};
    private final String userIconRejectFrame = "0000000000000000000000000000281028000000";
    private final String videocallFrameByte = "000000007C6C7C6C7C6C7C10387C000000000000";
    private final String voiceRecoderPlayFrame = "38007C003800385FDF5F380038007C0038C0070038007C003800385FDF5F380038007C0038C0070038007C003800385FDF5F380038007C0038C0070038007C003800385FDF5F380038007C0038C0070038007C003800385FDF5F380038007C0038C007007C0038007C00385FDF5F38007C0038007CC007007C0038007C00385FDF5F38007C0038007CC007007C0038007C00385FDF5F38007C0038007CC007007C0038007C00385FDF5F38007C0038007CC007007C0038007C00385FDF5F38007C0038007CC00700";
    private final String[] volumeLevelData = new String[]{"060A2500FFFF", "060A2501FFFF", "060A2502FFFF", "060A2503FFFF", "060A2504FFFF", "060A2505FFFF", "060A2506FFFF", "060A2507FFFF", "060A2508FFFF", "060A2509FFFF", "060A250AFFFF", "060A250BFFFF", "060A250CFFFF", "060A250DFFFF", "060A250EFFFF", "060A250FFFFF"};
    private final String[] waveNotiFrame = new String[]{"9249499224249249499224249249499224300C019249499224249249499224249249499224300C014949922424924949922424924949922424188601494992242492494992242492494992242418860149922424924949922424924949922424920CC30049922424924949922424924949922424920CC300922424924949922424924949922424924986610092242492494992242492494992242492498661002424924949922424924949922424924949C330002424924949922424924949922424924949C33000", "24924949922424924949922424924949926118002492494992242492494992242492494992611800"};
    private final String[] whaleNotiFrame = new String[]{};
    private final int what_blink = 9;
    private final int what_blink_time = 10;
    private final int what_cue = 8;
    private final int what_display_unit_time = 7;
    private final int what_end_effect = 14;
    private final int what_end_effect_time = 15;
    private final int what_end_hold_time = 16;
    private final int what_length = 1;
    private final int what_number_scene = 13;
    private final int what_scene_repeat = 12;
    private final int what_start_effect = 5;
    private final int what_start_effect_time = 6;
    private final int what_status_packet = 4;
    private final int what_total_display_time = 2;
    private final int what_total_repeat = 11;
    private final int what_total_scence_frame = 3;

    public List<String> getIndicationData() {
        List<String> list = new ArrayList();
        list.add("06102500FFFF");
        return list;
    }

    public List<String> getAlarmData() {
        List<String> list = new ArrayList();
        list.add("0606FF01FFFF");
        return list;
    }

    public List<String> getTimerData() {
        List<String> list = new ArrayList();
        list.add("0606FF02FFFF");
        return list;
    }

    public List<String> getVoiceRecorderPlayingData(int minute, int second, int millisecond) {
        List<String> list = new ArrayList();
        list.add("D30F3C0A8001020000160038007C003800385FDF5F380038007C0038C0070038007C003800385FDF5F380038007C0038C0070038007C003800385FDF5F380038007C0038C0070038007C003800385FDF5F380038007C0038C0070038007C003800385FDF5F380038007C0038C007007C0038007C00385FDF5F38007C0038007CC007007C0038007C00385FDF5F38007C0038007CC007007C0038007C00385FDF5F38007C0038007CC007007C0038007C00385FDF5F38007C0038007CC007007C0038007C00385FDF5F38007C0038007CC00700");
        return list;
    }

    public List<String> getVoiceRecorderRecordingData() {
        List<String> list = new ArrayList();
        list.add("D30F3C0A8001020000160038007C003800385FDF5F380038007C0038C0070038007C003800385FDF5F380038007C0038C0070038007C003800385FDF5F380038007C0038C0070038007C003800385FDF5F380038007C0038C0070038007C003800385FDF5F380038007C0038C007007C0038007C00385FDF5F38007C0038007CC007007C0038007C00385FDF5F38007C0038007CC007007C0038007C00385FDF5F38007C0038007CC007007C0038007C00385FDF5F38007C0038007CC007007C0038007C00385FDF5F38007C0038007CC00700");
        return list;
    }

    public List<String> getMusicData(int status) {
        List<String> list = new ArrayList();
        String cmd = "";
        switch (status) {
            case 1:
                cmd = "060D5C01FFFF";
                break;
            case 2:
                cmd = "060D5C02FFFF";
                break;
            case 3:
                cmd = "060D5C03FFFF";
                break;
            case 4:
                cmd = "060D5C04FFFF";
                break;
        }
        list.add(cmd);
        return list;
    }

    public List<String> getBatteryFullyChargiedData(int percentage) {
        return getBatteryChargingData(100);
    }

    public List<String> getUnknownIncomingCallData(String num) {
        List<String> list = new ArrayList();
        if (num.length() == 0) {
            list.add("3302FF02800A820000FF00" + this.presetIdAcceptFrame[0] + this.presetIdRejectFrame[0]);
        } else {
            int i;
            String Scene2stFrame = getCallNumberScrollFrame(num);
            int frameCount = Scene2stFrame.length() / 40;
            int i2 = frameCount / 10;
            if (frameCount % 10 > 0) {
                i = 1;
            } else {
                i = 0;
            }
            int packetCount = i2 + i;
            list.add("3316FF028014E20000F140" + this.presetIdAcceptFrame[0] + this.presetIdRejectFrame[0]);
            for (int i3 = 0; i3 < packetCount; i3++) {
                String Scene2stHeader = "3316FF0A800302000AF1C0";
                String packetFrame = "";
                if (i3 == packetCount - 1) {
                    Scene2stHeader = setHeaderValue(Scene2stHeader, 4, 2);
                    packetFrame = Scene2stFrame.substring(i3 * 400, Scene2stFrame.length());
                } else if (i3 == 0) {
                    Scene2stHeader = setHeaderValue(Scene2stHeader, 4, 1);
                    packetFrame = Scene2stFrame.substring(i3 * 400, (i3 + 1) * 400);
                } else {
                    Scene2stHeader = setHeaderValue(Scene2stHeader, 4, 3);
                    packetFrame = Scene2stFrame.substring(i3 * 400, (i3 + 1) * 400);
                }
                list.add(setHeaderValue(setHeaderValue(setHeaderValue(Scene2stHeader, 1, (packetFrame.length() / 2) + 11), 3, frameCount), 2, 255) + packetFrame);
            }
        }
        return list;
    }

    public List<String> getBatteryChargingData(int percentage) {
        List<String> list = new ArrayList();
        list.add("D30C310A80010200051147" + getMaskingFrameData(getBatteryIconFrameData(percentage), 1));
        list.add("1F0C3101801402000011E7" + getBatteryPercentage(percentage));
        return list;
    }

    public List<String> getUserIconIncomingCallData(String userFrame, int effect) {
        int i;
        int j;
        List<String> list = new ArrayList();
        int[][] rawArray = getArrayFromArrayString(userFrame);
        String acceptFrame = getFrameDataFromArray(rawArray);
        boolean findEmptySpace = true;
        for (i = 0; i < 9; i++) {
            for (j = 0; j < 17; j++) {
                System.out.print(rawArray[j][i]);
            }
            System.out.println();
        }
        for (i = 3; i < 6; i++) {
            for (j = 14; j < 17; j++) {
                if (rawArray[j][i] == 1) {
                    findEmptySpace = false;
                }
            }
        }
        if (findEmptySpace) {
            rawArray[14][3] = 1;
            rawArray[16][3] = 1;
            rawArray[15][4] = 1;
            rawArray[14][5] = 1;
            rawArray[16][5] = 1;
            for (i = 0; i < 9; i++) {
                for (j = 0; j < 17; j++) {
                    System.out.print(rawArray[j][i]);
                }
                System.out.println();
            }
            list.add("3302FF02800A820000FF00" + acceptFrame + getFrameDataFromArray(rawArray));
        } else {
            String headerCue = setHeaderValue("3316FF028014E20000F140", 13, 3);
            list.add("1F16FF01800E020000F140" + getFrameFromArrayString(userFrame));
            list.add(headerCue + "0000000000000000000000000000000000000000" + "0000000000000000000000000000281028000000");
        }
        return list;
    }

    public List<String> getUserIconNotificationData(String userFrame, int effect) {
        List<String> list = new ArrayList();
        String header = "BF152509800102001A1100";
        String frames;
        if (effect == 1000) {
            int i;
            int[][] rawArray = getArrayFromArrayString(userFrame);
            frames = "";
            for (i = 0; i < 9; i++) {
                for (int j = 0; j < 17; j++) {
                    System.out.print(rawArray[j][i]);
                }
                System.out.println();
            }
            for (i = 1; i < 10; i++) {
                frames = frames + getShiftFrameFromArray(0, i, rawArray);
            }
            list.add(setHeaderValue(header, 1, (frames.length() / 2) + 11) + frames);
        } else if (effect == 1001) {
            String rawFrame = getFrameFromArrayString(userFrame);
            frames = "";
            frames = getMaskingFrameData(rawFrame, 0);
            header = setHeaderValue(setHeaderValue(setHeaderValue(setHeaderValue(header, 1, (frames.length() / 2) + 11), 13, (frames.length() / 40) * 2), 4, 1), 3, 20);
            list.add(header + frames);
            list.add(setHeaderValue(header, 4, 2) + getMaskingFrameData(rawFrame, 4));
        }
        return list;
    }

    public List<String> getBatteryAlertData() {
        List<String> list = new ArrayList();
        list.add("330B250280040200001400" + this.batteryframe[1] + this.batteryframe[0]);
        return list;
    }

    public List<String> getVolumeData(int volumeLevel) {
        List<String> list = new ArrayList();
        list.add(this.volumeLevelData[volumeLevel]);
        return list;
    }

    public List<String> getVideoCallData() {
        List<String> list = new ArrayList();
        list.add("1F14FF0180FF020000FF00000000007C6C7C6C7C6C7C10387C000000000000");
        return list;
    }

    public List<String> getClockData(int hour, int minute) {
        List<String> list = new ArrayList();
        if (hour < 100 && hour >= 0 && minute < 60 && minute >= 0) {
            list.add("1F0F250197170200001127" + getClockFrameData(hour, minute));
        }
        return list;
    }

    public List<String> getIncomingCallPresetCallIdData(int id) {
        List<String> list = new ArrayList();
        if (id < 40) {
            switch (id) {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case Preset_ID_Tulip /*16*/:
                case 17:
                case 18:
                case Preset_ID_Coffee /*19*/:
                case 20:
                case Preset_ID_Surprised /*21*/:
                case Preset_ID_Mood_Neutral /*22*/:
                case Preset_ID_Mood_Bad /*23*/:
                case Preset_ID_Family /*24*/:
                case Preset_ID_Friends /*25*/:
                case Preset_ID_Twinkle /*32*/:
                case Preset_ID_Chicken /*38*/:
                case Preset_ID_Turtle /*39*/:
                    list.add("3302FF02800A820000FF00" + this.presetIdAcceptFrame[id] + this.presetIdRejectFrame[id]);
                    break;
                case Preset_ID_Squeeze /*26*/:
                case Preset_ID_Wave /*27*/:
                case Preset_ID_Amazed /*28*/:
                case Preset_ID_Decalcomanie /*29*/:
                case 30:
                case Preset_ID_Grinding /*31*/:
                case Preset_ID_Sea /*33*/:
                case Preset_ID_DNA /*34*/:
                case Preset_ID_Snow /*35*/:
                case Preset_ID_Firework /*36*/:
                case Preset_ID_Infinity /*37*/:
                    list.add("1F16FF01800E020000F140" + this.presetIdAcceptFrame[id]);
                    list.add(setHeaderValue("3316FF028014E20000F140", 13, 3) + "0000000000000000000000000000000000000000" + "0000000000000000000000000000281028000000");
                    break;
                default:
                    break;
            }
        }
        return list;
    }

    public List<String> getNotificationPresetIdData(int id) {
        List<String> list = new ArrayList();
        if (id < 40 && id >= 0) {
            String[] notiFrame = new String[]{""};
            switch (id) {
                case 1:
                    notiFrame = this.fatherNotiFrame;
                    break;
                case 2:
                    notiFrame = this.motherNotiFrame;
                    break;
                case 3:
                    notiFrame = this.boyNotiFrame;
                    break;
                case 4:
                    notiFrame = this.girlNotiFrame;
                    break;
                case 5:
                    notiFrame = this.smileNotiFrame;
                    break;
                case 6:
                    notiFrame = this.skyscraperNotiFrame;
                    break;
                case 7:
                    notiFrame = this.houseNotiFrame;
                    break;
                case 8:
                    notiFrame = this.carNotiFrame;
                    break;
                case 9:
                    notiFrame = this.butterflyNotiFrame;
                    break;
                case 10:
                    notiFrame = this.birdNotiFrame;
                    break;
                case 11:
                    notiFrame = this.whaleNotiFrame;
                    break;
                case 12:
                    notiFrame = this.elephantNotiFrame;
                    break;
                case 13:
                    notiFrame = this.bearNotiFrame;
                    break;
                case 14:
                    notiFrame = this.rabbitNotiFrame;
                    break;
                case 15:
                    notiFrame = this.horseNotiFrame;
                    break;
                case Preset_ID_Tulip /*16*/:
                    notiFrame = this.tulipNotiFrame;
                    break;
                case 17:
                    notiFrame = this.treeNotiFrame;
                    break;
                case 18:
                    notiFrame = this.heartNotiFrame;
                    break;
                case Preset_ID_Coffee /*19*/:
                    notiFrame = this.coffeeNotiFrame;
                    break;
                case 20:
                    notiFrame = this.giftNotiFrame;
                    break;
                case Preset_ID_Surprised /*21*/:
                    notiFrame = this.surprisedNotiFrame;
                    break;
                case Preset_ID_Mood_Neutral /*22*/:
                    notiFrame = this.mood_NeutralNotiFrame;
                    break;
                case Preset_ID_Mood_Bad /*23*/:
                    notiFrame = this.mood_BadNotiFrame;
                    break;
                case Preset_ID_Family /*24*/:
                    notiFrame = this.familyNotiFrame;
                    break;
                case Preset_ID_Friends /*25*/:
                    notiFrame = this.friendsNotiFrame;
                    break;
                case Preset_ID_Squeeze /*26*/:
                    notiFrame = this.squeezeNotiFrame;
                    break;
                case Preset_ID_Wave /*27*/:
                    notiFrame = this.waveNotiFrame;
                    break;
                case Preset_ID_Amazed /*28*/:
                    notiFrame = this.amazedNotiFrame;
                    break;
                case Preset_ID_Decalcomanie /*29*/:
                    notiFrame = this.decalcomanieNotiFrame;
                    break;
                case 30:
                    notiFrame = this.jawsNotiFrame;
                    break;
                case Preset_ID_Grinding /*31*/:
                    notiFrame = this.grindingNotiFrame;
                    break;
                case Preset_ID_Twinkle /*32*/:
                    notiFrame = this.twinkleNotiFrame;
                    break;
                case Preset_ID_Sea /*33*/:
                    notiFrame = this.seaNotiFrame;
                    break;
                case Preset_ID_DNA /*34*/:
                    notiFrame = this.dnaNotiFrame;
                    break;
                case Preset_ID_Snow /*35*/:
                    notiFrame = this.snowNotiFrame;
                    break;
                case Preset_ID_Firework /*36*/:
                    notiFrame = this.fireworkNotiFrame;
                    break;
                case Preset_ID_Infinity /*37*/:
                    notiFrame = this.infinityNotiFrame;
                    break;
                case Preset_ID_Chicken /*38*/:
                    notiFrame = this.chickenNotiFrame;
                    break;
                case Preset_ID_Turtle /*39*/:
                    notiFrame = this.turtleNotiFrame;
                    break;
            }
            int frameCount = ((notiFrame.length - 1) * 10) + ((notiFrame[notiFrame.length - 1].length() / 2) / 20);
            for (int i = 0; i < notiFrame.length; i++) {
                String Notiheader = "1F15250180010200001100";
                if (i == notiFrame.length - 1) {
                    Notiheader = setHeaderValue(Notiheader, 4, 2);
                } else if (i == 0) {
                    Notiheader = setHeaderValue(Notiheader, 4, 1);
                } else {
                    Notiheader = setHeaderValue(Notiheader, 4, 3);
                }
                list.add(setHeaderValue(setHeaderValue(setHeaderValue(setHeaderValue(Notiheader, 12, this.notification_repeat_array[id]), 2, this.notification_repeat_array[id] * frameCount), 1, (notiFrame[i].length() / 2) + 11), 3, frameCount) + notiFrame[i]);
            }
        }
        return list;
    }

    public List<String> getDuringCallData(int minute, int second) {
        List<String> list = new ArrayList();
        if (minute < 100 && minute >= 0 && second < 60 && second >= 0) {
            String frame = "";
            for (int i = 0; i < 4; i++) {
                if (second == 60) {
                    if (minute == 99) {
                        second = 59;
                    } else {
                        minute++;
                        second = 0;
                    }
                }
                frame = frame + getMiniTimeFrameData(minute, second);
                second++;
            }
            list.add("5B032504800A0200001100" + frame);
        }
        return list;
    }

    public List<String> getEndCallData(int minute, int second) {
        List<String> list = new ArrayList();
        if (minute < 100 && minute >= 0 && second < 60 && second >= 0) {
            list.add("3304250280060200001300" + getEndCallFrameData(minute, second) + "0000000000000000000000000000000000000000");
        }
        return list;
    }

    public List<String> getNewMessageData() {
        List<String> list = new ArrayList();
        list.add("D305250A800102001B1100" + getMaskingFrameData("00000000003E22E24222223E0000000000000000", 0));
        return list;
    }

    public List<String> getMissedEventData(int call, int msg) {
        List<String> list = new ArrayList();
        String missedCall = getMissedEventFrame(call, 1);
        String missedMsg = getMissedEventFrame(msg, 0);
        String header;
        if (call <= 0 || msg <= 0) {
            String frame = "";
            if (call > 0) {
                frame = missedCall;
            } else {
                frame = missedMsg;
            }
            header = setHeaderValue(setHeaderValue(setHeaderValue("1F09250197170200001127", 1, (frame.length() / 2) + 11), 3, frame.length() / 40), 2, 37);
            if (frame.length() / 40 > 1) {
                header = setHeaderValue(setHeaderValue(header, 7, 2), 16, 3);
            }
            list.add(header + frame);
        } else {
            header = setHeaderValue(setHeaderValue(setHeaderValue("1F09330197020200071147", 1, (missedCall.length() / 2) + 11), 3, missedCall.length() / 40), 2, 51);
            if (missedCall.length() / 40 > 1) {
                header = setHeaderValue(setHeaderValue(header, 7, 2), 16, 2);
            }
            list.add(header + missedCall);
            header = setHeaderValue(setHeaderValue(setHeaderValue("1F093301800202000711E7", 1, (missedMsg.length() / 2) + 11), 3, missedMsg.length() / 40), 2, 51);
            if (missedMsg.length() / 40 > 1) {
                header = setHeaderValue(setHeaderValue(header, 7, 2), 16, 2);
            }
            list.add(header + missedMsg);
        }
        return list;
    }

    private String getMissedEventFrame(int count, int type) {
        String MissedIcon = "";
        StringBuffer mBuffer = new StringBuffer("0000000000000000000000000000000000000000");
        if (type == 1) {
            MissedIcon = "CEE66A7068E4C0";
        } else if (type == 0) {
            MissedIcon = "3E22E24222223E";
        }
        if (count > 99) {
            String multiFrame = "";
            if (type == 1) {
                return "00CEE66A7068E4C0005C547C005C547C00000000CEE66A7068E4C0005C547C005C547C0010000000E66A7068E4C0005C547C005C547C0010380000006A7068E4C0005C547C005C547C00103810000000";
            }
            return "003E22E24222223E005C547C005C547C000000003E22E24222223E005C547C005C547C001000000022E24222223E005C547C005C547C001038000000E24222223E005C547C005C547C00103810000000";
        }
        if (count < 10) {
            mBuffer.replace(6, MissedIcon.length() + 6, MissedIcon);
            mBuffer.replace(22, this.miniNumForMsgCall[count].length() + 22, this.miniNumForMsgCall[count]);
        } else {
            mBuffer.replace(2, MissedIcon.length() + 2, MissedIcon);
            mBuffer.replace(18, this.miniNumForMsgCall[count / 10].length() + 18, this.miniNumForMsgCall[count / 10]);
            mBuffer.replace(26, this.miniNumForMsgCall[count % 10].length() + 26, this.miniNumForMsgCall[count % 10]);
        }
        return mBuffer.toString();
    }

    private String getShiftFrameFromArray(int shiftDirection, int shiftPixel, int[][] array) {
        int i;
        int j;
        int[][] transArray = (int[][]) Array.newInstance(Integer.TYPE, new int[]{17, 9});
        if (shiftDirection == 0) {
            for (i = 0; i < shiftPixel; i++) {
                for (j = 0; j < 17; j++) {
                    transArray[j][i] = array[j][(9 - shiftPixel) + i];
                }
            }
        }
        if (shiftDirection == 1) {
            for (i = 0; i < 9 - shiftPixel; i++) {
                for (j = 0; j < 17; j++) {
                    transArray[j][i] = array[j][shiftPixel + i];
                }
            }
        }
        return getFrameDataFromArray(transArray);
    }

    private String getMaskingFrameData(String frame, int direction) {
        int[][] transArray = getMatrixFromFrameByte(frame);
        String maskFrame = "";
        int i;
        int j;
        int k;
        if (direction == 0) {
            maskFrame = getFrameDataFromArray(transArray);
            for (i = 8; i > -1; i--) {
                for (j = i; j < 9; j++) {
                    for (k = 0; k < 17; k++) {
                        transArray[k][j] = 0;
                    }
                }
                maskFrame = getFrameDataFromArray(transArray) + maskFrame;
            }
        } else if (direction == 1) {
            maskFrame = frame;
            for (i = 0; i < 9; i++) {
                for (j = i; j > -1; j--) {
                    for (k = 0; k < 17; k++) {
                        transArray[k][j] = 0;
                    }
                }
                maskFrame = getFrameDataFromArray(transArray) + maskFrame;
            }
        } else if (direction == 4) {
            maskFrame = getFrameDataFromArray(transArray);
            for (i = 8; i > -1; i--) {
                for (j = i; j < 9; j++) {
                    for (k = 0; k < 17; k++) {
                        transArray[k][j] = 0;
                    }
                }
                maskFrame = maskFrame + getFrameDataFromArray(transArray);
            }
        } else if (direction == 5) {
            maskFrame = frame;
            for (i = 0; i < 9; i++) {
                for (j = i; j > -1; j--) {
                    for (k = 0; k < 17; k++) {
                        transArray[k][j] = 0;
                    }
                }
                maskFrame = maskFrame + getFrameDataFromArray(transArray);
            }
        }
        return maskFrame;
    }

    protected int[][] getMatrixFromFrameByte(String frame) {
        int temp;
        int offset;
        StringBuffer buffer = new StringBuffer(frame);
        byte[] firstData = new BigInteger(buffer.substring(0, 2), 16).toByteArray();
        buffer.replace(0, 2, "01");
        byte[] data = new BigInteger(buffer.toString(), 16).toByteArray();
        data[0] = firstData[0];
        int[][] matrix = (int[][]) Array.newInstance(Integer.TYPE, new int[]{17, 9});
        for (int i = 0; i < 17; i++) {
            temp = data[i] & 255;
            for (int j = 0; j < 8; j++) {
                if (((1 << j) & temp) > 0) {
                    matrix[i][j] = 1;
                } else {
                    matrix[i][j] = 0;
                }
            }
        }
        temp = data[17] & 255;
        for (offset = 0; offset < 8; offset++) {
            if (((1 << offset) & temp) > 0) {
                matrix[offset][8] = 1;
            } else {
                matrix[offset][8] = 0;
            }
        }
        temp = data[18] & 255;
        for (offset = 8; offset < 16; offset++) {
            if (((1 << (offset - 8)) & temp) > 0) {
                matrix[offset][8] = 1;
            } else {
                matrix[offset][8] = 0;
            }
        }
        matrix[16][8] = data[19] & 255;
        return matrix;
    }

    protected String getCallNumberScrollFrame(String numberStr) {
        String frame = "";
        char[] s = numberStr.toCharArray();
        int i = 0;
        while (i < s.length) {
            if (i != 0) {
                frame = frame + "00";
            }
            if (s[i] == '+') {
                frame = frame + "103810";
            } else if (s[i] == '-') {
                frame = frame + "1010";
            } else if (s[i] >= '0' && s[i] <= '9') {
                frame = frame + this.minuNumPhonNumber[s[i] - 48];
            }
            i++;
        }
        StringBuffer buffer = new StringBuffer(frame);
        frame = "";
        while (buffer.length() > 34) {
            frame = frame + buffer.substring(0, 34) + "000000";
            buffer.replace(0, 6, "");
        }
        return frame + new StringBuffer("0000000000000000000000000000000000000000").replace(0, buffer.length(), buffer.toString());
    }

    private String getMiniTimeFrameData(int minute, int second) {
        StringBuffer mBuffer = new StringBuffer("0000000000000000000000000000000000000000");
        mBuffer.replace(0, 6, this.miniNumForMsgCall[minute / 10]);
        mBuffer.replace(8, 14, this.miniNumForMsgCall[minute % 10]);
        mBuffer.replace(16, 18, "28");
        mBuffer.replace(20, 26, this.miniNumForMsgCall[second / 10]);
        mBuffer.replace(28, 34, this.miniNumForMsgCall[second % 10]);
        return mBuffer.toString();
    }

    private String getClockFrameData(int hour, int minute) {
        int hourFirstOffset;
        int hourSecondOffset;
        int colonOffset;
        int minuteFirstOffset;
        int minuteSecondOffset;
        String hourFirstStr = this.largeNum[hour / 10];
        String hourSecondStr = this.largeNum[hour % 10];
        String minuteFirstStr = this.largeNum[minute / 10];
        String minuteSecondStr = this.largeNum[minute % 10];
        StringBuffer mBuffer = new StringBuffer("0000000000000000000000000000000000000000");
        if (hour < 10) {
            if (hour == 1) {
                if (minute / 10 == 1) {
                    if (minute % 10 == 1) {
                        hourFirstOffset = -1;
                        hourSecondOffset = 2;
                        colonOffset = 6;
                        minuteFirstOffset = 9;
                        minuteSecondOffset = 13;
                    } else {
                        hourFirstOffset = -1;
                        hourSecondOffset = 2;
                        colonOffset = 6;
                        minuteFirstOffset = 9;
                        minuteSecondOffset = 12;
                    }
                } else if (minute % 10 == 1) {
                    hourFirstOffset = -1;
                    hourSecondOffset = 2;
                    colonOffset = 6;
                    minuteFirstOffset = 8;
                    minuteSecondOffset = 12;
                } else {
                    hourFirstOffset = -1;
                    hourSecondOffset = 2;
                    colonOffset = 6;
                    minuteFirstOffset = 8;
                    minuteSecondOffset = 12;
                }
            } else if (minute / 10 == 1) {
                if (minute % 10 == 1) {
                    hourFirstOffset = -1;
                    hourSecondOffset = 2;
                    colonOffset = 7;
                    minuteFirstOffset = 9;
                    minuteSecondOffset = 13;
                } else {
                    hourFirstOffset = -1;
                    hourSecondOffset = 2;
                    colonOffset = 7;
                    minuteFirstOffset = 9;
                    minuteSecondOffset = 12;
                }
            } else if (minute % 10 == 1) {
                hourFirstOffset = -1;
                hourSecondOffset = 2;
                colonOffset = 6;
                minuteFirstOffset = 8;
                minuteSecondOffset = 12;
            } else {
                hourFirstOffset = -1;
                hourSecondOffset = 2;
                colonOffset = 6;
                minuteFirstOffset = 8;
                minuteSecondOffset = 12;
            }
        } else if (hour / 10 == 1) {
            if (hour % 10 == 1) {
                if (minute / 10 == 1) {
                    if (minute % 10 == 1) {
                        hourFirstOffset = 1;
                        hourSecondOffset = 5;
                        colonOffset = 8;
                        minuteFirstOffset = 10;
                        minuteSecondOffset = 14;
                    } else {
                        hourFirstOffset = 1;
                        hourSecondOffset = 5;
                        colonOffset = 8;
                        minuteFirstOffset = 10;
                        minuteSecondOffset = 13;
                    }
                } else if (minute % 10 == 1) {
                    hourFirstOffset = 1;
                    hourSecondOffset = 5;
                    colonOffset = 8;
                    minuteFirstOffset = 10;
                    minuteSecondOffset = 14;
                } else {
                    hourFirstOffset = 1;
                    hourSecondOffset = 5;
                    colonOffset = 8;
                    minuteFirstOffset = 10;
                    minuteSecondOffset = 14;
                }
            } else if (minute / 10 == 1) {
                if (minute % 10 == 1) {
                    hourFirstOffset = 1;
                    hourSecondOffset = 4;
                    colonOffset = 8;
                    minuteFirstOffset = 10;
                    minuteSecondOffset = 14;
                } else {
                    hourFirstOffset = 0;
                    hourSecondOffset = 3;
                    colonOffset = 7;
                    minuteFirstOffset = 9;
                    minuteSecondOffset = 12;
                }
            } else if (minute % 10 == 1) {
                hourFirstOffset = 0;
                hourSecondOffset = 3;
                colonOffset = 7;
                minuteFirstOffset = 9;
                minuteSecondOffset = 13;
            } else {
                hourFirstOffset = 0;
                hourSecondOffset = 3;
                colonOffset = 7;
                minuteFirstOffset = 9;
                minuteSecondOffset = 13;
            }
        } else if (hour % 10 == 1) {
            if (minute / 10 == 1) {
                if (minute % 10 == 1) {
                    hourFirstOffset = 1;
                    hourSecondOffset = 5;
                    colonOffset = 8;
                    minuteFirstOffset = 10;
                    minuteSecondOffset = 14;
                } else {
                    hourFirstOffset = 1;
                    hourSecondOffset = 5;
                    colonOffset = 8;
                    minuteFirstOffset = 10;
                    minuteSecondOffset = 13;
                }
            } else if (minute % 10 == 1) {
                hourFirstOffset = 1;
                hourSecondOffset = 5;
                colonOffset = 8;
                minuteFirstOffset = 10;
                minuteSecondOffset = 14;
            } else {
                hourFirstOffset = 1;
                hourSecondOffset = 5;
                colonOffset = 8;
                minuteFirstOffset = 10;
                minuteSecondOffset = 14;
            }
        } else if (minute / 10 == 1) {
            if (minute % 10 == 1) {
                hourFirstOffset = 0;
                hourSecondOffset = 4;
                colonOffset = 8;
                minuteFirstOffset = 10;
                minuteSecondOffset = 14;
            } else {
                hourFirstOffset = 1;
                hourSecondOffset = 5;
                colonOffset = 9;
                minuteFirstOffset = 11;
                minuteSecondOffset = 14;
            }
        } else if (minute % 10 == 1) {
            hourFirstOffset = 0;
            hourSecondOffset = 4;
            colonOffset = 8;
            minuteFirstOffset = 10;
            minuteSecondOffset = 14;
        } else {
            hourFirstOffset = 0;
            hourSecondOffset = 4;
            colonOffset = 8;
            minuteFirstOffset = 10;
            minuteSecondOffset = 14;
        }
        if (hourFirstOffset != -1) {
            mBuffer.replace(hourFirstOffset * 2, (hourFirstOffset * 2) + hourFirstStr.length(), hourFirstStr);
        }
        mBuffer.replace(hourSecondOffset * 2, (hourSecondOffset * 2) + hourSecondStr.length(), hourSecondStr);
        mBuffer.replace(minuteFirstOffset * 2, (minuteFirstOffset * 2) + minuteFirstStr.length(), minuteFirstStr);
        mBuffer.replace(minuteSecondOffset * 2, (minuteSecondOffset * 2) + minuteSecondStr.length(), minuteSecondStr);
        mBuffer.replace(colonOffset * 2, (colonOffset * 2) + "28".length(), "28");
        return mBuffer.toString();
    }

    private String getEndCallFrameData(int minute, int second) {
        return getMiniTimeFrameData(minute, second);
    }

    protected String getFrameFromArrayString(String array) {
        return getFrameDataFromArray(getArrayFromArrayString(array));
    }

    protected String getShiftFrame(int direction, int pixel, String frame) {
        return getShiftFrameFromArray(direction, pixel, getMatrixFromFrameByte(frame));
    }

    private String getBatteryIconFrameData(int batteryLevel) {
        int batteryIndex = 0;
        if (batteryLevel < 10) {
            batteryIndex = 0;
        } else if (batteryLevel < 20) {
            batteryIndex = 1;
        } else if (batteryLevel < 40) {
            batteryIndex = 2;
        } else if (batteryLevel < 60) {
            batteryIndex = 3;
        } else if (batteryLevel < 80) {
            batteryIndex = 4;
        } else if (batteryLevel < 100) {
            batteryIndex = 5;
        } else if (batteryLevel == 100) {
            batteryIndex = 6;
        }
        return this.batteryframe[batteryIndex];
    }

    private String getBatteryPercentage(int percentage) {
        StringBuffer mBuffer = new StringBuffer("0000000000000000000000000000000000000000");
        if (percentage < 10) {
            mBuffer.replace(10, this.largeNum[percentage].length() + 10, this.largeNum[percentage]);
            mBuffer.replace(18, "9040209".length() + 18, "9040209");
        } else if (percentage < 10 || percentage >= 100) {
            mBuffer.replace(2, this.largeNum[1].length() + 2, this.largeNum[1]);
            mBuffer.replace(8, this.largeNum[0].length() + 8, this.largeNum[0]);
            mBuffer.replace(16, this.largeNum[0].length() + 16, this.largeNum[0]);
            mBuffer.replace(24, "9040209".length() + 24, "9040209");
        } else if (percentage / 10 == 1) {
            if (percentage % 10 == 1) {
                mBuffer.replace(6, this.largeNum[percentage / 10].length() + 6, this.largeNum[percentage / 10]);
                mBuffer.replace(12, this.largeNum[percentage % 10].length() + 12, this.largeNum[percentage % 10]);
                mBuffer.replace(20, "9040209".length() + 20, "9040209");
            } else {
                mBuffer.replace(6, this.largeNum[percentage / 10].length() + 6, this.largeNum[percentage / 10]);
                mBuffer.replace(12, this.largeNum[percentage % 10].length() + 12, this.largeNum[percentage % 10]);
                mBuffer.replace(20, "9040209".length() + 20, "9040209");
            }
        } else if (percentage % 10 == 1) {
            mBuffer.replace(6, this.largeNum[percentage / 10].length() + 6, this.largeNum[percentage / 10]);
            mBuffer.replace(14, this.largeNum[percentage % 10].length() + 14, this.largeNum[percentage % 10]);
            mBuffer.replace(20, "9040209".length() + 20, "9040209");
        } else {
            mBuffer.replace(6, this.largeNum[percentage / 10].length() + 6, this.largeNum[percentage / 10]);
            mBuffer.replace(14, this.largeNum[percentage % 10].length() + 14, this.largeNum[percentage % 10]);
            mBuffer.replace(22, "9040209".length() + 22, "9040209");
        }
        return mBuffer.toString();
    }

    private int[][] getArrayFromArrayString(String array) {
        int[][] ledArray = (int[][]) Array.newInstance(Integer.TYPE, new int[]{17, 9});
        if (array.length() == 153) {
            for (int i = 0; i < 9; i++) {
                for (int j = 0; j < 17; j++) {
                    int position = (i * 17) + j;
                    if ("1".equals(array.substring(position, position + 1))) {
                        ledArray[j][i] = 1;
                    } else {
                        ledArray[j][i] = 0;
                    }
                }
            }
        }
        return ledArray;
    }

    private String getFrameDataFromArray(int[][] clickArray) {
        int i;
        int temp;
        String byteString = "";
        for (i = 0; i < 17; i++) {
            temp = 0;
            for (int j = 0; j < 8; j++) {
                temp += clickArray[i][j] << j;
            }
            byteString = byteString.concat(toHexaByte(temp));
        }
        temp = 0;
        for (i = 0; i < 8; i++) {
            temp += clickArray[i][8] << i;
        }
        byteString = byteString.concat(toHexaByte(temp));
        temp = 0;
        for (i = 8; i < 16; i++) {
            temp += clickArray[i][8] << (i - 8);
        }
        return byteString.concat(toHexaByte(temp)).concat(toHexaByte(clickArray[16][8]));
    }

    protected String setHeaderValue(String header, int what, int value) {
        StringBuffer buffer = new StringBuffer(header);
        int header_register = this.Header_register_array[what - 1] * 2;
        int preValue = toIntegerFromString(buffer.substring(header_register, header_register + 2));
        switch (what) {
            case 1:
            case 2:
            case 3:
            case Preset_ID_Tulip /*16*/:
                buffer.replace(header_register, header_register + 2, toHexaByte(value));
                break;
            case 4:
                buffer.replace(header_register, header_register + 2, toHexaByte((value << 6) | (preValue & 63)));
                break;
            case 5:
                buffer.replace(header_register, header_register + 2, toHexaByte((value << 4) | (preValue & 207)));
                break;
            case 6:
                buffer.replace(header_register, header_register + 2, toHexaByte((preValue & 240) | value));
                break;
            case 7:
                buffer.replace(header_register, header_register + 2, toHexaByte(value));
                break;
            case 8:
                buffer.replace(header_register, header_register + 2, toHexaByte((value << 7) | (preValue & 127)));
                break;
            case 9:
                buffer.replace(header_register, header_register + 2, toHexaByte((value << 4) | (preValue & 239)));
                break;
            case 10:
                buffer.replace(header_register, header_register + 2, toHexaByte((preValue & 240) | value));
                break;
            case 11:
                buffer.replace(header_register, header_register + 2, toHexaByte((value << 4) | (preValue & 15)));
                break;
            case 12:
                buffer.replace(header_register, header_register + 2, toHexaByte((preValue & 240) | value));
                break;
            case 13:
                buffer.replace(header_register, header_register + 2, toHexaByte((value << 6) | (preValue & 63)));
                break;
            case 14:
                buffer.replace(header_register, header_register + 2, toHexaByte((value << 4) | (preValue & 207)));
                break;
            case 15:
                buffer.replace(header_register, header_register + 2, toHexaByte((preValue & 240) | value));
                break;
        }
        return buffer.toString();
    }

    private int toIntegerFromString(String value) {
        return new BigInteger(value, 16).toByteArray()[0];
    }

    private String toHexa(int value) {
        String returnString = "";
        if (value >= 16 && value < 0) {
            return "";
        }
        switch (value) {
            case 10:
                returnString = "A";
                break;
            case 11:
                returnString = "B";
                break;
            case 12:
                returnString = "C";
                break;
            case 13:
                returnString = "D";
                break;
            case 14:
                returnString = "E";
                break;
            case 15:
                returnString = "F";
                break;
            default:
                returnString = (value % 16) + "";
                break;
        }
        return returnString;
    }

    private String toHexaByte(int value) {
        if (value <= 255 || value >= 0) {
            return toHexa(value / 16) + toHexa(value % 16);
        }
        return "XX";
    }
}
